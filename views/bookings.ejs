<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mis Reservas - EasyStay</title>
    <link rel="stylesheet" href="/css/search.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            background: #f4f8fb;
        }
        .reservas-container {
            max-width: 900px;
            margin: 40px auto;
            background: #fff;
            border-radius: 18px;
            box-shadow: 0 2px 12px rgba(0,0,0,0.08);
            padding: 32px 24px;
        }
        h1 {
            text-align: center;
            color: #007faf;
            margin-bottom: 30px;
        }
        .reserva-section {
            margin-bottom: 40px;
        }
        .reserva-section h2 {
            color: #00b894;
            margin-bottom: 18px;
            font-size: 1.4rem;
            border-left: 5px solid #007faf;
            padding-left: 10px;
        }
        .reserva-list {
            list-style: none;
            padding: 0;
        }
        .reserva-card {
            background: #f7fafd;
            border-radius: 12px;
            box-shadow: 0 1px 4px rgba(0,0,0,0.04);
            margin-bottom: 18px;
            padding: 18px 20px;
            display: flex;
            flex-direction: column;
            gap: 8px;
            border-left: 4px solid #007faf;
            position: relative;
        }
        .reserva-card .estado {
            font-weight: bold;
            color: #007faf;
            text-transform: capitalize;
        }
        .reserva-card .fecha {
            color: #555;
        }
        .reserva-card .icono {
            font-size: 1.3rem;
            margin-right: 8px;
            color: #00b894;
        }
        .no-reservas {
            color: #888;
            font-style: italic;
            margin-bottom: 20px;
        }
        .back-to-home {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background: #007faf;
            color: #fff;
            padding: 8px 18px;
            border-radius: 20px;
            text-decoration: none;
            font-weight: 600;
            margin-bottom: 18px;
            margin-left: 0;
            transition: background 0.2s, transform 0.2s;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        }
        .back-to-home:hover {
            background: #005f7a;
            color: #fff;
            transform: translateY(-2px) scale(1.03);
        }
        .reserva-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #eee;
        }
        .btn {
            padding: 8px 15px;
            border-radius: 6px;
            border: none;
            cursor: pointer;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 5px;
            transition: all 0.3s ease;
            text-decoration: none;
        }
        .btn-edit {
            background-color: #007faf;
            color: white;
        }
        .btn-edit:hover {
            background-color: #006a94;
            transform: translateY(-2px);
        }
        .btn-delete {
            background-color: #dc3545;
            color: white;
        }
        .btn-delete:hover {
            background-color: #bb2d3b;
            transform: translateY(-2px);
        }
        .estado-badge {
            display: inline-block;
            padding: 4px 10px;
            border-radius: 15px;
            font-size: 0.85em;
            font-weight: 600;
            text-transform: capitalize;
        }
        .estado-activa, .estado-confirmada {
            background-color: #28a745; /* Verde */
            color: white;
        }
        .estado-cancelada, .estado-pendiente, .estado-inactiva {
            background-color: #6c757d; /* Gris */
            color: white;
        }
        .estado-finalizada {
            background-color: #007bff; /* Azul */
            color: white;
        }
        .estado-abonada {
            background-color: #ffc107; /* Amarillo */
            color: #212529;
        }
        /* Deshabilitar botones */
        .disabled-btn {
            opacity: 0.6;
            cursor: not-allowed;
        }
        .disabled-btn:hover {
            transform: none !important;
            background-color: inherit !important;
            color: inherit !important;
        }
        /* Toast notifications */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 25px;
            background: #333;
            color: white;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            z-index: 1000;
            animation: slideIn 0.3s ease-out;
        }
        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
    </style>
</head>
<body>
    <%- include('partials/footer') %>
    
    <% if (messages.success) { %>
        <div class="toast success-toast">
            <%= messages.success %>
        </div>
    <% } %>
    
    <% if (messages.error) { %>
        <div class="toast error-toast">
            <%= messages.error %>
        </div>
    <% } %>

    <% function formatFecha(fecha, hora) {
        if (!fecha) return '';
        const d = new Date(fecha);
        const dia = d.getDate().toString().padStart(2, '0');
        const mes = (d.getMonth() + 1).toString().padStart(2, '0');
        const anio = d.getFullYear();
        return `${anio}-${mes}-${dia} ${hora}`;
    } %>

    <div class="reservas-container">
        <a href="/" class="back-to-home">
            <i class="fas fa-arrow-left"></i> Volver
        </a>
        <h1><i class="fas fa-calendar-check"></i> Mis Reservas</h1>
        
        <% if (messages.success_msg) { %>
            <div class="alert alert-success"><%= messages.success_msg %></div>
        <% } %>
        <% if (messages.error_msg) { %>
            <div class="alert alert-danger"><%= messages.error_msg %></div>
        <% } %>

        <div class="reserva-section">
            <h2><i class="fas fa-hotel icono"></i> Reservas de Hotel</h2>
            <% if (hotelBookings && hotelBookings.length > 0) { %>
                <ul class="reserva-list">
                    <% hotelBookings.forEach(r => { %>
                        <% 
                            const fechaEntrada = new Date(r.fecha_entrada);
                            const hoy = new Date();
                            // Poner ambas fechas al inicio del día para una comparación precisa (ignorar la hora)
                            fechaEntrada.setHours(0, 0, 0, 0);
                            hoy.setHours(0, 0, 0, 0);

                            const diffTime = fechaEntrada.getTime() - hoy.getTime();
                            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); // Diferencia en días, redondeado hacia arriba

                            const canEditOrCancel = diffDays > 5; // Verdadero si faltan más de 5 días
                            let cancelWarningText = "Esta acción no se puede deshacer.";

                            if (diffDays <= 0) { // Mismo día o en el pasado
                                cancelWarningText = "¡Alerta! La cancelación de la reserva no está permitida el mismo día del check-in.";
                            } else if (diffDays <= 5) {
                                cancelWarningText = "¡Alerta! La cancelación de la reserva será penalizada si es dentro de los 5 días previos al check-in.";
                            }

                            const servicioCompletado = (new Date(r.fecha_salida) <= hoy) && (r.estado === 'finalizada');
                        %>
                        <li class="reserva-card">
                            <div><strong>Hotel:</strong> <%= r.hotel_nombre %></div>
                            <div><strong>Habitación:</strong> <%= r.habitacion_tipo %></div>
                            <div><strong>Check-in:</strong> <span class="fecha"><i class="fas fa-calendar-day"></i> <%= formatFecha(r.fecha_entrada, '15:00 pm') %> </span></div>
                            <div><strong>Check-out:</strong> <span class="fecha"><i class="fas fa-calendar-day"></i> <%= formatFecha(r.fecha_salida, '10:00 am') %> </span></div>
                            <div><strong>Huéspedes:</strong> <%= r.numero_huespedes %></div>
                            <div>
                                <strong>Estado:</strong> 
                                <span class="estado-badge <%= r.estado === 'activa' ? 'estado-activa' : (r.estado === 'finalizada' ? 'estado-finalizada' : 'estado-inactiva') %>">
                                    <%= r.estado %>
                                </span>
                            </div>
                            <% if (r.comentarios) { %>
                                <div><strong>Comentarios:</strong> <%= r.comentarios %></div>
                            <% } %>
                            <div class="reserva-actions">
                                <a href="/hotel/reserva/edit/<%= r.id %>" class="btn btn-edit <%= !canEditOrCancel ? 'disabled-btn' : '' %>" <%= !canEditOrCancel ? 'onclick="return false;"' : '' %>>
                                    <i class="fas fa-edit"></i> Editar
                                </a>
                                <% if (r.estado !== 'cancelada' && r.estado !== 'finalizada') { %>
                                    <form action="/hotel/reserva/cancelar/<%= r.id %>" method="POST" style="display:inline;">
                                        <button type="button" onclick="confirmarCancelacion(this, '<%= cancelWarningText %>')" class="btn btn-delete <%= !canEditOrCancel ? 'disabled-btn' : '' %>" <%= !canEditOrCancel ? 'disabled' : '' %>>
                                            <i class="fas fa-ban"></i> Cancelar reserva
                                        </button>
                                    </form>
                                <% } %>
                                <% if (r.estado !== 'abonada' && r.estado !== 'finalizada') { %>
                                    <a href="/hotel/reserva/abonar/<%= r.id %>" class="btn btn-abonar" style="background:#ffb300;color:#fff;">
                                        <i class="fas fa-wallet"></i> Hacer abono
                                    </a>
                                <% } %>
                                <% if (servicioCompletado) { %>
                                    <a href="/calificar-experiencia/<%= r.id %>?tipo=hotel" class="btn btn-calificar" style="background:#4CAF50;color:#fff;">
                                        <i class="fas fa-star"></i> Calificar
                                    </a>
                                <% } else { %>
                                    <button class="btn btn-calificar disabled-btn" style="background:#4CAF50;color:#fff;" disabled title="Solo puedes calificar una vez finalizada la estadía y el estado sea 'finalizada'.">
                                        <i class="fas fa-star"></i> Calificar
                                    </button>
                                <% } %>
                            </div>
                        </li>
                    <% }) %>
                </ul>
            <% } else { %>
                <div class="no-reservas">No tienes reservas de hotel.</div>
            <% } %>
        </div>
        <div class="reserva-section">
            <h2><i class="fas fa-utensils icono"></i> Reservas de Restaurante</h2>
            <% if (restaurantBookings && restaurantBookings.length > 0) { %>
                <ul class="reserva-list">
                    <% restaurantBookings.forEach(r => { %>
                        <% 
                            const fechaReserva = new Date(`${r.fecha}T${r.hora}`);
                            const hoyRestaurante = new Date();
                            // Considerar completado si la fecha y hora de la reserva ya pasaron y el estado es 'activa'
                            const servicioCompletadoRestaurante = (fechaReserva <= hoyRestaurante) && (r.estado === 'activa');
                        %>
                        <li class="reserva-card" data-fecha="<%= r.fecha.toISOString().split('T')[0] %>" data-hora="<%= r.hora %>">
                            <div><strong>Restaurante:</strong> <%= r.restaurante_nombre %></div>
                            <div><strong>Fecha:</strong> <%= new Date(r.fecha).toLocaleDateString('es-ES', { day: 'numeric', month: 'numeric', year: 'numeric' }) %> - <strong>Hora:</strong> <%= r.hora %></div>
                            <div class="tiempo-restante" style="color: #007faf; font-weight: bold;"></div>
                            <% if (r.nombre_reclamo) { %>
                                <div><strong>Encargado:</strong> <%= r.nombre_reclamo %></div>
                            <% } %>
                            <div><strong>Mesa:</strong> #<%= r.numero_mesa || 'Asignada' %> <% if (r.mesa_capacidad) { %>(<%= r.mesa_capacidad %> sillas)<% } %></div>
                            <div>
                                <strong>Estado:</strong> 
                                <span class="estado-badge estado-<%= r.estado.toLowerCase() %>">
                                    <%= r.estado %>
                                </span>
                            </div>
                            <% if (r.notas) { %>
                                <div><strong>Notas:</strong> <%= r.notas %></div>
                            <% } %>
                            
                            <div class="reserva-actions">
                                <% if (r.estado.toLowerCase() !== 'cancelada') { %>
                                    <a href="/restaurante/reserva/<%= r.id %>/edit" class="btn btn-edit">
                                        <i class="fas fa-edit"></i> Editar
                                    </a>
                                    <button onclick="confirmarCancelacionRestaurante('<%= r.id %>')" class="btn btn-delete">
                                        <i class="fas fa-ban"></i> Cancelar
                                    </button>
                                <% } %>
                                <% if (servicioCompletadoRestaurante) { %>
                                    <a href="/calificar-experiencia/<%= r.id %>?tipo=restaurante" class="btn btn-calificar" style="background:#4CAF50;color:#fff;">
                                        <i class="fas fa-star"></i> Calificar
                                    </a>
                                <% } else { %>
                                    <button class="btn btn-calificar disabled-btn" style="background:#4CAF50;color:#fff;" disabled title="Solo puedes calificar una vez que la reserva haya sido consumada y el estado sea 'activa'.">
                                        <i class="fas fa-star"></i> Calificar
                                    </button>
                                <% } %>
                            </div>
                        </li>
                    <% }) %>
                </ul>
            <% } else { %>
                <div class="no-reservas">No tienes reservas de restaurante.</div>
            <% } %>
        </div>
    </div>

    <script>
    function confirmarEliminacion(id) {
        Swal.fire({
            title: '¿Estás seguro de eliminar esta reserva?',
            text: "Esta acción no se puede deshacer y eliminará permanentemente la reserva",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Sí, eliminar permanentemente',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = `/hotel/reserva/delete/${id}`;
            }
        });
    }

    function confirmarCancelacionRestaurante(id) {
        Swal.fire({
            title: '¿Estás seguro de cancelar esta reserva?',
            text: "La reserva se marcará como 'Cancelada' y la mesa se liberará. Esta acción no se puede deshacer.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Sí, cancelar reserva',
            cancelButtonText: 'Volver'
        }).then((result) => {
            if (result.isConfirmed) {
                // Crear y enviar el formulario de cancelación
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `/restaurante/reserva/cancel/${id}`;
                document.body.appendChild(form);
                form.submit();
            }
        });
    }

    // Función para mostrar SweetAlert de confirmación de cancelación
    function confirmarCancelacion(button, warningText) {
        Swal.fire({
            title: '¿Estás seguro?',
            text: warningText,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#dc3545',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Sí, cancelar',
            cancelButtonText: 'No, volver'
        }).then((result) => {
            if (result.isConfirmed) {
                button.closest('form').submit();
            }
        });
    }

    // Ocultar los toasts después de 3 segundos y manejar contadores
    document.addEventListener('DOMContentLoaded', () => {
        const toasts = document.querySelectorAll('.toast');
        toasts.forEach(toast => {
            setTimeout(() => {
                toast.style.opacity = '0';
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        });

        const reservaCards = document.querySelectorAll('.reserva-card[data-fecha]');
        reservaCards.forEach(card => {
            const fecha = card.dataset.fecha;
            const hora = card.dataset.hora;
            const tiempoRestanteEl = card.querySelector('.tiempo-restante');
            const editButton = card.querySelector('.btn-edit');

            if (!fecha || !hora || !tiempoRestanteEl) return;

            const targetDate = new Date(`${fecha}T${hora}`).getTime();

            const interval = setInterval(() => {
                const now = new Date().getTime();
                const distance = targetDate - now;

                if (distance < 0) {
                    clearInterval(interval);
                    tiempoRestanteEl.innerHTML = "La reserva ha finalizado.";
                    if (editButton) {
                         editButton.classList.add('disabled-btn');
                         editButton.onclick = (e) => e.preventDefault();
                    }
                    return;
                }

                const days = Math.floor(distance / (1000 * 60 * 60 * 24));
                const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                const seconds = Math.floor((distance % (1000 * 60)) / 1000);

                let countdownText = "Tiempo restante: ";
                if (days > 0) countdownText += `${days} días `;
                countdownText += `${hours} horas ${minutes} minutos y ${seconds} segundos`;
                tiempoRestanteEl.innerHTML = countdownText;

                // Deshabilitar botón de editar si faltan menos de 12 horas
                if (distance < (12 * 60 * 60 * 1000)) {
                    if (editButton && !editButton.classList.contains('disabled-btn')) {
                        editButton.classList.add('disabled-btn');
                        editButton.onclick = (e) => {
                            e.preventDefault();
                            Swal.fire({
                                title: 'Edición no permitida',
                                text: 'No puedes editar la reserva porque faltan menos de 12 horas para la cita.',
                                icon: 'warning',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'Entendido'
                            });
                        };
                    }
                }
            }, 1000);
        });
    });
    </script>
</body>
</html> 